// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: lineownervalidation.sql

package model

import (
	"context"
)

const insertLineOwnerValidation = `-- name: InsertLineOwnerValidation :one
INSERT INTO line_owner_validation (code, id_user)
VALUES ($1, $2) RETURNING id_line_owner_validation, code, id_user, created_at
`

type InsertLineOwnerValidationParams struct {
	Code   string `json:"code"`
	IDUser int32  `json:"id_user"`
}

func (q *Queries) InsertLineOwnerValidation(ctx context.Context, arg InsertLineOwnerValidationParams) (LineOwnerValidation, error) {
	row := q.db.QueryRowContext(ctx, insertLineOwnerValidation, arg.Code, arg.IDUser)
	var i LineOwnerValidation
	err := row.Scan(
		&i.IDLineOwnerValidation,
		&i.Code,
		&i.IDUser,
		&i.CreatedAt,
	)
	return i, err
}

const selectLastLineOwnerValidation = `-- name: SelectLastLineOwnerValidation :one
select id_line_owner_validation, code, id_user, created_at
from line_owner_validation
where id_user = $1
order by id_line_owner_validation
        desc limit 1
`

func (q *Queries) SelectLastLineOwnerValidation(ctx context.Context, idUser int32) (LineOwnerValidation, error) {
	row := q.db.QueryRowContext(ctx, selectLastLineOwnerValidation, idUser)
	var i LineOwnerValidation
	err := row.Scan(
		&i.IDLineOwnerValidation,
		&i.Code,
		&i.IDUser,
		&i.CreatedAt,
	)
	return i, err
}
